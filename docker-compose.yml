# docker-compose.yml
version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_LOG_LEVEL=WARN
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.1
    ports:
      - "9093:9093"
    volumes:
      - kafka-data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_LOG_LEVEL=WARN
    depends_on:
      - zookeeper
    networks:
      - backend

  spark-master:
    build: ./spark/cluster
    volumes:
      - spark-data:/data
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - SPARK_MODE=master
      - SPARK_LOG4J_LOGGERS=warn
    networks:
      - backend

  spark-worker:
    build: ./spark/cluster
    volumes:
      - spark-data:/data
    deploy:
      replicas: 1
    ports:
      - '8081:8081'
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_LOG4J_LOGGERS=warn
    networks:
      - backend

  spark-driver:
    build: ./spark/driver
    volumes:
      - spark-data:/data
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_LOCAL_IP=spark-driver
      - SPARK_LOG_LEVEL=WARN
    depends_on:
      - spark-master
      - kafka
    networks:
      - backend

  mosquitto:
    image: eclipse-mosquitto:2.0
    volumes:
      - mosquitto-data:/mosquitto/data
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - "1883:1883"
    networks:
      - edge

  node-red:
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Rome
    ports:
      - "1880:1880"
    volumes:
      - ./node-red-data:/data
    depends_on:
      - kafka
      - mosquitto
    networks:
      - backend
      - edge

  mpi:
    build: ./mpi
    # entrypoint: /app/deploy.sh mpi-node-1 mpi-node-2
    volumes:
      - ./mpi/simulation.toml:/app/simulation.toml:ro
    depends_on:
      - kafka
      - mpi-node
    networks:
      - backend
      - simulation

  # mpi-node-1:
  #   build: ./mpi/node
  #   networks:
  #     - backend
  #     - simulation

  # mpi-node-2:
  #   build: ./mpi/node
  #   networks:
  #     - backend
  #     - simulation

networks:
  backend:
  edge:
  simulation:

volumes:
  mosquitto-data:
  spark-data:
  kafka-data:
  zookeeper-data:
  sim-data: