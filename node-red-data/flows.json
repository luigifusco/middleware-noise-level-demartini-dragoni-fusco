[
    {
        "id": "9e2990e28006b0c1",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5c14dcb012cf313",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c7c0605c05032967",
        "type": "mqtt in",
        "z": "9e2990e28006b0c1",
        "name": "Recv sensor data",
        "topic": "sensor/data",
        "qos": "1",
        "datatype": "json",
        "broker": "c5c14dcb012cf313",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "58ba75e0f6719d30"
            ]
        ]
    },
    {
        "id": "58ba75e0f6719d30",
        "type": "function",
        "z": "9e2990e28006b0c1",
        "name": "",
        "func": "const producer = context.get('producer')\n\nconst run = async () => {\n  // Producing\n  await producer.connect()\n  await producer.send({\n    topic: 'poi/data',\n    messages: [\n      { value: 'Hello KafkaJS user!' + JSON.stringify(msg)},\n    ],\n  })\n}\n\nrun().catch(console.error)",
        "outputs": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nconst kafka = new kafkajs.Kafka({\n  clientId: 'client',\n  brokers: ['kafka:9092']\n})\n\ncontext.set('producer', kafka.producer());\n",
        "finalize": "",
        "libs": [
            {
                "var": "kafkajs",
                "module": "kafkajs"
            }
        ],
        "x": 620,
        "y": 180,
        "wires": []
    },
    {
        "id": "3f551a844f02a43a",
        "type": "mqtt out",
        "z": "9e2990e28006b0c1",
        "name": "Send sensor data",
        "topic": "sensor/data",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c5c14dcb012cf313",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "dfbd66c3812f6e30",
        "type": "inject",
        "z": "9e2990e28006b0c1",
        "name": "Fake gateway w/ pos",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "sensor/data",
        "payload": "{\"noise\":87.6,\"ts\":1649164799169,\"reliability\":0.7,\"position\":\"8.23167756,-10.4534563\"}",
        "payloadType": "json",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "3f551a844f02a43a"
            ]
        ]
    }
]